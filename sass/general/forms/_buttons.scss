// ---------------------------------------------------------------------------
// Buttons
//
// - Settings
// - Mixins
// - Classes

// ---------------------------------------------------------------------------
// Settings

$button-rhythm: .25;
$button-radius: .25em;

// ---------------------------------------------------------------------------
// Mixins
//
// - button()
// - button-color()
// - button-size()
// - reset-button()

// Apply standard button styles to an element.
//
// button($color)
// - $color     : The base color for the button.
@mixin button(
  $color: $green
) {
  @include border-radius($button-radius);
  @include button-color($color);
  display: inline-block;
  margin: 0;
  padding: rhythm($button-rhythm) 1em;
  text-align: center;
  &:active { @include box-shadow(color(darkest,.5) 0 0 3px 1px inset); }
}

// Change button background and border colors.
//
// button-color($color)
// - $color     : The base color for the button.
@mixin button-color(
  $color: $green
) {
  $color    : color($color);
  $light    : color($color light);
  $dark     : color($color dark);
  $contrast : contrast($color);
  $shadow   : color(contrast($contrast, $back $base3), .5);

  @include text-shadow($shadow 0 -1px 0);
  @include background(
    linear-gradient(top, rgba($light,.25), rgba($color,0), rgba($dark,.25))
  );
  @include box-shadow(mix($color,$back) 0 0 0 1px inset);
  background-color: $color;
  color: $contrast;

  #{$link}, #{$focus} { color: $contrast; }
}

// Change button font size and rhythm.
//
// button-size([$size])
// - $size  : Optional font size and rhythm adjustments.
//          - Default: .125
@mixin button-size(
  $size: .125
) {
  $size: compact($size);
  $rhythm: null;
  $fontsize: null;

  @each $arg in $size {
    @if unitless($arg) { $rhythm: $arg; }
    @else { $fontsize: $arg; }
  }

  @if $fontsize { @include adjust-font-size-to($fontsize); }
  @if $rhythm { @include rhythm-padding($rhythm); }
}

$inset-color: color($back,.5);
$inset-size: rhythm(.125);

// Add inset shadow to an element.
//
// inset()
@mixin inset {
  @include box-shadow($inset-color 0 0 $inset-size inset);
}

// Reset button styles
//
// reset-button()
@mixin reset-button {
  @include reset-box-model;
  @include reset-font;
  background: none;
  color: inherit;
  text-align: left;
  &:focus { outline: 0; }
}

// ---------------------------------------------------------------------------
// Classes
//
// - %button
// - %reset-button

%button {
  @include button;
  &[disabled] {
    @include button-color(color($red));
    cursor: text;
  }
}

%button-icon {
  @extend %button;
  @extend %icon-replace;
  padding: 0;
  width: rhythm(1.25);
}

%inset { @include inset; }

%reset-button {
  @include reset-button;
  @include box-shadow(none);
  @include text-shadow(none);
}
